[{"title":"我的第一篇博客","url":"/2023/11/10/my-first-blog/","content":"Hexo博客的搭建\nHexo是一个快速、简洁且高效的博客框架。Hexo使用Markdown（或其他标记语言）解析文章，在几秒内，即可利用靓丽的主题生成静态网页\n\n超快速度\n\nNode.js所带来的超快生成速度，让上百个页面在几秒内瞬间完成渲染\n\n支持Markdown\n\nHexo支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件\n\n一键部署\n\n只需一条指令即可部署到 GitHub Pages, Heroku 或其他平台\n\n插件和可拓展性\n\n强大的 API 带来无限的可能，与数种模板引擎（EJS，Pug，Nunjucks）和工具（Babel，PostCSS，Less&#x2F;Sass）轻易集成\n\n原因为什么突然想到搭建个人的博客？大概是终于想主动做些有意思的事。可以预料到的是，这个博客大部分时间只有我自己会来浏览，偶尔或许会有人出于好奇，通过github上这个项目旁边的链接进来瞧瞧，不过这都无所谓了，姑且当它是我的一本日记，我想在这当中记录一些我想要记录的东西\n博客初成形相比于查阅官方文档，我更倾向于观看演示视频来解决问题，因为这样更便于我的操作与理解，一定程度上也减少了错误的发生。最初的默认主题博客搭建参考于b站上的up主CodeSheep的视频—手把手教你从0开始搭建自己的个人博客 |无坑版视频教程| hexo。\n一、环境准备\n安装Hexo前需先安装下列应用程序：\n\nNode.js\nGit\n\n\n1、安装Node.jsHexo是一个基于Node.js的博客框架，这意味着，想要搭建Hexo博客，我们需要先安装Node.js\n需要注意的是，官方文档中要求Node.js版本需不低于10.13，建议使用Node.js 12.0及以上版本。如果你的电脑中尚未安装Node.js，那么可以前往Node.js (nodejs.org)下载相应的安装包进行安装\n如果你像我一样，电脑中已经安装了Node.js，但需要升级到更高的版本，那么无需卸载原来的版本，Node.js提供了一种更加简单且高效的升级办法：下载所需版本的安装包，安装时选择当前版本的安装目录（此时的默认安装目录正常情况下便是当前版本的安装目录）安装即可，安装程序会将当前版本替换为需要安装的版本\n2、安装GitGit ，一个软件开发者必备的代码版本控制系统。Hexo 使用 Git 来管理主题和插件等外部依赖，并且在部署 Hexo 网站到远程仓库（如 GitHub、GitLab 等）时，Git 也是必需的。\n你可以前往Git (git-scm.com)进行下载\n如果你需要对你的git版本进行更新，你可以打开终端界面输入\ngit update-git-for-windows\n\n系统会为将你的git更新至最新的版本\n二、安装Hexo所有必备的应用程序安装完成后，即可使用npm安装Hexo\n1、全局安装：直接打开终端界面输入\nnpm install -g hexo-cli\n\n此时安装的Hexo可以在系统的任意一个目录下使用，你可以打开终端界面在任意一个目录下键入Hexo命令来搭建Hexo博客\n2、局部安装：进入需要安装的目录输入\nnpm install hexo\n\n此时安装的Hexo仅能在该目录及其子目录下使用，通过cmd命令框键入Hexo命令在该目录或其子目录下搭建Hexo博客\n3、旧版本Hexo安装考虑到并非所有人都愿意使用较新版本的Node.js，如果你坚持使用较旧版本的Node.js，你也可以安装旧版本的Hexo来避免版本不兼容的问题\n打开终端界面，然后运行以下命令，将version替换为你想要安装的Hexo版本号\nnpm install -g hexo@version\n\n例如，如果你想要安装Hexo的3.2.0版本，命令将如下所示\nnpm install -g hexo@3.2.0\n\n安装完成后，可以运行以下命令来检验Hexo的安装版本：\nhexo -v\n\n这将显示安装的Hexo版本号，以确保安装成功\n以下为Hexo与Node.js的版本对应表：\n\n\n\nHexo版本\n最低版本（Node.js版本）\n最高版本（Node.js版本）\n\n\n\n7.0+\n14.00\nlatest\n\n\n6.2+\n12.13.0\nlatest\n\n\n6.0+\n12.13.0\n18.5.0\n\n\n5.0+\n10.13.0\n12.0.0\n\n\n4.1 - 4.2\n8.10\n10.0.0\n\n\n4.0\n8.6\n8.10.0\n\n\n3.3 - 3.9\n6.9\n8.0.0\n\n\n3.2 - 3.3\n0.12\n未知\n\n\n3.0 - 3.1\n0.10或iojs\n未知\n\n\n0.0.1 - 2.8\n0.10\n未知\n\n\n你可以选择你当前Node.js版本所能支持的Hexo版本进行安装\n三、建立博客1、初始化经过上述准备后，系统已经满足了建立一个Hexo实例所需的所有条件\n执行下列命令\nhexo init &lt;folder&gt;cd &lt;folder&gt;npm install\n\n这里的&lt;folder&gt;是Hexo实例所处的文件夹，若当前目录下无该文件夹，系统会新建一个文件夹，在该文件夹的目录下，系统会生成一系列的文件，这里只介绍三个较为重要的文件\nsource\n初始情况下只有一个文件夹_posts（用于存放你博客正文的Markdown文件），后续可能需要添加其他文件夹，如about（用于存放about页面的Markdown文件），以及一个用于存放图片资源的文件夹images\nthemes\n这个文件夹初始情况下为空，它用于存放后续个性化博客时的主题文件\n_config.yml\n极其重要的文件，作为整个博客的配置文件，用于配置博客中的各类功能与内容\n2、本地运行执行以下命令\nhexo generate\n\nHexo会生成静态文件，这些文件就是博客的源码，他们被放到了public文件夹当中\n再执行\nhexo server\n\nHexo会启动本地服务器，并将生成的静态文件部署在该服务器上。默认情况下，访问网址为：http://localhost:4000/，你可以在浏览器的地址栏输入该网址进行访问\n你将看到\n\n这便是默认的Hexo博客，同时Hexo为你自动生成了一片示例文章，至此，我们完成了基本的Hexo博客的搭建\n部署\nGitHub提供了一项免费的静态站点托管服务GitHub Pages，它直接从GitHub上的仓库获取HTML、CSS和JavaScript文件，通过构建过程运行文件，然后发布网站\n\n要想使用GitHub Pages，首先我们需要创建一个用来管理Hexo生成的静态页面的仓库，GitHub Pages规定了这个仓库的命名格式应为&lt;你的GitHub用户名&gt;.github.io，同时这个仓库名后续也将成为公网访问该页面的地址 \n这里我们需要安装一个Hexo的上传插件deployer-git\nnpm install hexo-deployer-git --save\n\n后续这个插件将极大地便捷我们的推送\n然后我们需要进行推送信息的设置，使用vim打开配置文件_config.yml\nvim _config.yml\n\n找到deploy并将其修改为\ndeploy:  type: git  repo:https://github.com/&lt;你的GitHub用户名&gt;/&lt;你的GitHub用户名&gt;.github.io.git  branch: master\n\n在这之后，我们只需执行\nhexo d\n\n即可通过deployer-git快速的将本地的Hexo博客部署到GitHub Pages上，在首次推送时，需要进行GitHub的身份认证，输入用户名和密码后，系统将开始推送，完成推送后，查看对应的GitHub的仓库\n\n对应的静态页面文件已被推送到仓库中\n此时我们在浏览器的地址栏输入&lt;你的GitHub用户名&gt;.github.io便能访问该博客页面\n","tags":["Hexo","GitHub Pages"]},{"title":"Hello World","url":"/2023/11/10/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n"}]